{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Comparison of Neural Network Algorithms Performance on MNIST Dataset\n",
    "MOHSEN SALIMY\n",
    "\n",
    "## Table of Contents:\n",
    "1. [Introduction](#intro)\n",
    "1. [Data Preparation](#D_prepare)\n",
    "1. [BPN Algorithm](#dnn)\n",
    " 1. [Architecture](#arch_dnn)\n",
    " 1. [Model Building](#build_dnn)\n",
    " 1. [Performance Analysis](#per_dnn)\n",
    "1. [CNN Algorithm](#cnn)\n",
    " 1. [Architecture](#arch_cnn)\n",
    " 1. [Model Building](#build_cnn)\n",
    " 1. [Performance Analysis](#per_cnn)\n",
    "1. [Results & Conclusion](#result)\n",
    "\n",
    "\n",
    "<a class='anchor' id='intro'> </a>\n",
    "\n",
    "\n",
    "As the models based on NN are advancing quickly. Today, I’m picking two algorithms based on neural networks to make comparative analysis. I will test if a CNN model performs better than a MLP (Backpropagation) Neural Network model.\n",
    "### Data Definition:\n",
    "The MNIST dataset of handwritten digits is a 70000 images collection. It’s splitted to 60000 training images and 10000 test images. Each image in the dataset is a 28 by 28 pixels (width & height), and grey scaled; means each pixel value is a number between 0 and 255. This version of the data is provided by Yann LeCun through this link http://yann.lecun.com/exdb/mnist/. The digits here are centered in the image and image sizes are normalized. \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Imported Libraries successfully\n"
     ]
    }
   ],
   "source": [
    "# Load important libraries\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.losses import SparseCategoricalCrossentropy\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "from tensorflow.keras.layers import Flatten, Dense, Dropout, Conv2D, MaxPool2D\n",
    "\n",
    "print('Imported Libraries successfully')\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='D_prepare'> </a>\n",
    "## Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training examples = 60000\n",
      "test examples = 10000\n"
     ]
    }
   ],
   "source": [
    "# Read data to environment\n",
    "train = pd.read_csv('data/mnist_train.csv')\n",
    "test = pd.read_csv('data/mnist_test.csv')\n",
    "\n",
    "print('training examples = {}'.format(train.shape[0]))\n",
    "print('test examples = {}'.format(test.shape[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data issues\n",
    "- We need row pixel values to be read as images --> reshape each row to (28, 28, 1), imshow(pixels_matrix)\n",
    "- Normalize the pixel values to be grey scaled --> pixel_value/255\n",
    "- Separate labels from features --> (data_x, data_y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((54000, 784), (6000, 784), (10000, 784))"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Split the training set into train and validation sets: (90%, 10%)\n",
    "# After splitting normalize the training data so that each pixel in an image has a value within the interval [0, 1]\n",
    "sample_size = train.shape[0]\n",
    "validation_size = int(train.shape[0] * 0.1)\n",
    "test_size = test.shape[0]\n",
    "\n",
    "# train_x\n",
    "train_x = np.asarray(train.iloc[:sample_size-validation_size, 1:]) / 255\n",
    "# val_x\n",
    "val_x = np.asarray(train.iloc[sample_size-validation_size:, 1:]) / 255\n",
    "# test_x\n",
    "test_x = np.asarray(test.iloc[:, 1:]) / 255\n",
    "\n",
    "train_x.shape, val_x.shape, test_x.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# train_y\n",
    "train_y = np.asarray(train.iloc[:sample_size-validation_size, 0])\n",
    "# val_y\n",
    "val_y = np.asarray(train.iloc[sample_size-validation_size:, 0])\n",
    "# test_y\n",
    "test_y = np.asarray(test.iloc[:, 0])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Display sample images with labels from training set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 15 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rows = 3 \n",
    "cols = 5 \n",
    "f = plt.figure(figsize=(2*cols,2*rows)) # defining a figure of size rows*cols\n",
    "\n",
    "for i in range(rows*cols): \n",
    "    f.add_subplot(rows, cols, i+1) # adding sub plot to figure on each iteration\n",
    "    plt.imshow(train_x[i].reshape([28,28]), cmap=plt.get_cmap('gray')) \n",
    "    plt.axis(\"off\")\n",
    "    plt.title(str(train_y[i]), y=-0.20)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Display sample images with labels from test set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rows = 2 \n",
    "cols = 3 \n",
    "f = plt.figure(figsize=(2*cols,2*rows)) # defining a figure of size rows*cols\n",
    "\n",
    "for i in range(rows*cols): \n",
    "    f.add_subplot(rows, cols, i+1) # adding sub plot to figure on each iteration\n",
    "    plt.imshow(test_x[i].reshape([28,28]), cmap=plt.get_cmap('gray')) \n",
    "    plt.axis(\"off\")\n",
    "    plt.title(str(test_y[i]), y=-0.20)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sigmoid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sigmoid(Z):\n",
    "    \n",
    "    # Z is numpy array of shape (n, m) where n is number of neurons in the layer and m is the number of samples \n",
    "    # sigmoid_memory is stored as it is used later on in backpropagation\n",
    "    \n",
    "    H = 1/(1+np.exp(-Z))\n",
    "    sigmoid_memory = Z\n",
    "    \n",
    "    return H, sigmoid_memory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sigmoid(Z) = (array([[0.5       , 0.73105858],\n",
      "       [0.88079708, 0.95257413],\n",
      "       [0.98201379, 0.99330715],\n",
      "       [0.99752738, 0.99908895]]), array([[0, 1],\n",
      "       [2, 3],\n",
      "       [4, 5],\n",
      "       [6, 7]]))\n"
     ]
    }
   ],
   "source": [
    "Z = np.arange(8).reshape(4,2)\n",
    "print (\"sigmoid(Z) = \" + str(sigmoid(Z)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    " initializing_parameters "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def initialize_parameters(dimensions):\n",
    "\n",
    "    # dimensions is a list containing the number of neuron in each layer in the network\n",
    "    # It returns parameters which is a python dictionary containing the parameters \"W1\", \"b1\", ..., \"WL\", \"bL\":\n",
    "\n",
    "    np.random.seed(2)\n",
    "    parameters = {}\n",
    "    L = len(dimensions)            # number of layers in the network + 1\n",
    "\n",
    "    for l in range(1, L): \n",
    "        parameters['W' + str(l)] = np.random.randn(dimensions[l], dimensions[l-1]) * 0.1\n",
    "        parameters['b' + str(l)] = np.zeros((dimensions[l], 1)) \n",
    "        \n",
    "        assert(parameters['W' + str(l)].shape == (dimensions[l], dimensions[l-1]))\n",
    "        assert(parameters['b' + str(l)].shape == (dimensions[l], 1))\n",
    "\n",
    "        \n",
    "    return parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "W1 = [[-0.04167578 -0.00562668 -0.21361961 ... -0.06168445  0.03213358\n",
      "  -0.09464469]\n",
      " [-0.05301394 -0.1259207   0.16775441 ... -0.03284246 -0.05623108\n",
      "   0.01179136]\n",
      " [ 0.07386378 -0.15872956  0.01532001 ... -0.08428557  0.10040469\n",
      "   0.00545832]]\n",
      "b1 = [[0.]\n",
      " [0.]\n",
      " [0.]]\n",
      "W2 = [[ 0.06650944 -0.19626047  0.2112715 ]\n",
      " [-0.28074571 -0.13967752  0.02641189]\n",
      " [ 0.10925169  0.06646016  0.08565535]\n",
      " [-0.11058228  0.03715795  0.13440124]\n",
      " [-0.16421272 -0.1153127   0.02013163]\n",
      " [ 0.13985659  0.07228733 -0.10717236]\n",
      " [-0.05673344 -0.03663499 -0.15460347]]\n",
      "b2 = [[0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]]\n",
      "W3 = [[ 0.20406947 -0.04960206 -0.06131668 -0.17449682  0.01840741 -0.00795452\n",
      "   0.12406296]\n",
      " [ 0.08625738 -0.01239074  0.05854764  0.19336815 -0.07322525 -0.039205\n",
      "   0.07512152]\n",
      " [-0.05947453  0.04753173 -0.1083593   0.08228398  0.07047718 -0.05854343\n",
      "  -0.12699409]\n",
      " [ 0.03255273  0.00457369 -0.13662463  0.10202692 -0.07310626  0.1496712\n",
      "   0.13433165]\n",
      " [ 0.02566371  0.0734615  -0.14332651  0.00178312  0.05686418 -0.1263975\n",
      "  -0.14590294]\n",
      " [ 0.15906599  0.04026281  0.14249133  0.10019812 -0.28192685 -0.11228612\n",
      "  -0.01523209]\n",
      " [ 0.00556535  0.01378749 -0.0675063  -0.00885622 -0.10151087  0.12861383\n",
      "  -0.09708002]\n",
      " [-0.0577768   0.08917285 -0.05625892  0.01765442 -0.09055266 -0.00368937\n",
      "   0.04094553]\n",
      " [-0.15298018 -0.16785625 -0.116733    0.08260156  0.05470732  0.08330186\n",
      "   0.14913897]\n",
      " [-0.04016882 -0.07274709 -0.01175106  0.0241847   0.10988869  0.01330499\n",
      "   0.05696497]]\n",
      "b3 = [[0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]\n",
      " [0.]]\n"
     ]
    }
   ],
   "source": [
    "dimensions  = [784, 3,7,10]\n",
    "parameters = initialize_parameters(dimensions)\n",
    "print(\"W1 = \" + str(parameters[\"W1\"])) #Hidden layer1\n",
    "print(\"b1 = \" + str(parameters[\"b1\"]))\n",
    "print(\"W2 = \" + str(parameters[\"W2\"])) #Hidden layer2\n",
    "print(\"b2 = \" + str(parameters[\"b2\"])) \n",
    "print(\"W3 = \" + str(parameters[\"W3\"])) #Output layer\n",
    "print(\"b3 = \" + str(parameters[\"b3\"]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='dnn'> </a>\n",
    "## Backpropagation Neural Network (BPN)\n",
    "\n",
    "<a class='anchor' id='arch_dnn'> </a>\n",
    "### Model Architecture\n",
    "\n",
    "\n",
    "<a class='anchor' id='build_dnn'> </a>\n",
    "### Model Build"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Classes categorical encoding (one hot encoding)\n",
    "\n",
    "# train_y \n",
    "train1_y = pd.get_dummies(train_y).values\n",
    "# val_y\n",
    "val1_y = pd.get_dummies(val_y).values\n",
    "# test_y\n",
    "test1_y = pd.get_dummies(test_y).values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Parameters initialization\n",
    "learning_rate = 0.1\n",
    "iterations = 100\n",
    "N = train_y.size\n",
    "\n",
    "# number of input features\n",
    "input_size = 784\n",
    "\n",
    "# number of hidden layers neurons\n",
    "hidden_size = 4\n",
    "\n",
    "# number of neurons at the output layer\n",
    "output_size = 10  \n",
    "\n",
    "results = pd.DataFrame(columns=[\"mse\", \"accuracy\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize weights\n",
    "np.random.seed(10)\n",
    "\n",
    "# initializing weight for the hidden layer\n",
    "W1 = np.random.normal(scale=0.5, size=(input_size, hidden_size))   \n",
    "\n",
    "# initializing weight for the output layer\n",
    "W2 = np.random.normal(scale=0.5, size=(hidden_size , output_size))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sigmoid(x):\n",
    "    return 1 / (1 + np.exp(-x))\n",
    "\n",
    "def mean_squared_error(y_pred, y_true):\n",
    "    return ((y_pred - y_true)**2).sum() / (2*y_pred.size)\n",
    "    \n",
    "def accuracy(y_pred, y_true):\n",
    "    acc = y_pred.argmax(axis=1) == y_true.argmax(axis=1)\n",
    "    return acc.mean() * 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "for itr in range(iterations):    \n",
    "    \n",
    "    # feedforward propagation\n",
    "    # on hidden layer\n",
    "    Z1 = np.dot(train_x, W1)\n",
    "    A1 = sigmoid(Z1)\n",
    "\n",
    "    # on output layer\n",
    "    Z2 = np.dot(A1, W2)\n",
    "    A2 = sigmoid(Z2)\n",
    "    \n",
    "    \n",
    "    # Calculating error\n",
    "    mse = mean_squared_error(A2, train1_y)\n",
    "    acc = accuracy(A2, train1_y)\n",
    "    results = results.append({\"mse\":mse, \"accuracy\":acc}, ignore_index=True )\n",
    "    \n",
    "    # backpropagation\n",
    "    E1 = A2 - train1_y\n",
    "    dW1 = E1 * A2 * (1 - A2)\n",
    "\n",
    "    E2 = np.dot(dW1, W2.T)\n",
    "    dW2 = E2 * A1 * (1 - A1)\n",
    "\n",
    "    \n",
    "    # weight updates\n",
    "    W2_update = np.dot(A1.T, dW1) / N\n",
    "    W1_update = np.dot(train_x.T, dW2) / N\n",
    "\n",
    "    W2 = W2 - learning_rate * W2_update\n",
    "    W1 = W1 - learning_rate * W1_update"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The model has a high value for accuracy and there is no need for tunning its parameters."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# MLP - Multi-Layer Perceptron"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import numpy as np\n",
    "from torchvision import datasets\n",
    "import torchvision.transforms as transforms\n",
    "from torch.utils.data.sampler import SubsetRandomSampler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# number of subprocesses to use for data loading\n",
    "num_workers = 0\n",
    "# how many samples per batch to load\n",
    "batch_size = 20\n",
    "# percentage of training set to use as validation\n",
    "valid_size = 0.2\n",
    "# convert data to torch.FloatTensor\n",
    "transform = transforms.ToTensor()\n",
    "# choose the training and testing datasets\n",
    "train_data = datasets.MNIST(root = 'data', train = True, download = True, transform = transform)\n",
    "test_data = datasets.MNIST(root = 'data', train = False, download = True, transform = transform)\n",
    "# obtain training indices that will be used for validation\n",
    "num_train = len(train_data)\n",
    "indices = list(range(num_train))\n",
    "np.random.shuffle(indices)\n",
    "split = int(np.floor(valid_size * num_train))\n",
    "train_index, valid_index = indices[split:], indices[:split]\n",
    "# define samplers for obtaining training and validation batches\n",
    "train_sampler = SubsetRandomSampler(train_index)\n",
    "valid_sampler = SubsetRandomSampler(valid_index)\n",
    "# prepare data loaders\n",
    "train_loader = torch.utils.data.DataLoader(train_data, batch_size = batch_size, \n",
    "                                           sampler = train_sampler, num_workers = num_workers)\n",
    "valid_loader = torch.utils.data.DataLoader(train_data, batch_size = batch_size,\n",
    "                                          sampler = valid_sampler, num_workers = num_workers)\n",
    "test_loader = torch.utils.data.DataLoader(test_data, batch_size = batch_size,\n",
    "                                         num_workers = num_workers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-11-e5d5236ded26>:11: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.\n",
      "  ax = fig.add_subplot(2, 20/2, idx+1, xticks=[], yticks=[])\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x288 with 20 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "    \n",
    "# obtain one batch of training images\n",
    "dataiter = iter(train_loader)\n",
    "images, labels = dataiter.next()\n",
    "images = images.numpy()\n",
    "# plot the images in the batch, along with the corresponding labels\n",
    "fig = plt.figure(figsize=(25, 4))\n",
    "for idx in np.arange(20):\n",
    "    ax = fig.add_subplot(2, 20/2, idx+1, xticks=[], yticks=[])\n",
    "    ax.imshow(np.squeeze(images[idx]), cmap='gray')\n",
    "    # print out the correct label for each image\n",
    "    # .item() gets the value contained in a Tensor\n",
    "    ax.set_title(str(labels[idx].item()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img = np.squeeze(images[1])\n",
    "fig = plt.figure(figsize = (12,12)) \n",
    "ax = fig.add_subplot(111)\n",
    "ax.imshow(img, cmap='gray')\n",
    "width, height = img.shape\n",
    "thresh = img.max()/2.5\n",
    "for x in range(width):\n",
    "    for y in range(height):\n",
    "        val = round(img[x][y],2) if img[x][y] !=0 else 0\n",
    "        ax.annotate(str(val), xy=(y,x),\n",
    "                    horizontalalignment='center',\n",
    "                    verticalalignment='center',\n",
    "                    color='white' if img[x][y]<thresh else 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Net(\n",
      "  (fc1): Linear(in_features=784, out_features=512, bias=True)\n",
      "  (fc2): Linear(in_features=512, out_features=512, bias=True)\n",
      "  (fc3): Linear(in_features=512, out_features=10, bias=True)\n",
      "  (dropout): Dropout(p=0.2, inplace=False)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "In [5]\n",
    "import torch.nn as nn\n",
    "import torch.nn.functional as F\n",
    "\n",
    "# define the NN architecture\n",
    "class Net(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(Net, self).__init__()\n",
    "        # Number of hidden nodes in each layer (512)\n",
    "        hidden_1 = 512\n",
    "        hidden_2 = 512\n",
    "        # Linear layer (784 -> hidden_1)\n",
    "        self.fc1 = nn.Linear(28 * 28, hidden_1)\n",
    "        # Linear layer (n_hidden -> hidden_2)\n",
    "        self.fc2 = nn.Linear(hidden_1, hidden_2)\n",
    "        # Linear layer (n_hidden -> 10)\n",
    "        self.fc3 = nn.Linear(hidden_2, 10)\n",
    "        # Dropout layer (p=0.2)\n",
    "        # Dropout prevents overfitting of data\n",
    "        self.dropout = nn.Dropout(0.2)\n",
    "\n",
    "    def forward(self, x):\n",
    "        # Flatten image input\n",
    "        x = x.view(-1, 28 * 28)\n",
    "        # Add hidden layer, with relu activation function\n",
    "        x = F.relu(self.fc1(x))\n",
    "        # Add dropout layer\n",
    "        x = self.dropout(x)\n",
    "        # Add hidden layer, with relu activation function\n",
    "        x = F.relu(self.fc2(x))\n",
    "        # Add dropout layer\n",
    "        x = self.dropout(x)\n",
    "        # Add output layer\n",
    "        x = self.fc3(x)\n",
    "        return x\n",
    "\n",
    "# Initialize the NN\n",
    "model = Net()\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-18-731dd270b2c2>:12: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.\n",
      "  ax = fig.add_subplot(2, 20/2, idx+1, xticks=[], yticks=[])\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x288 with 20 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "    \n",
    "# obtain one batch of training images\n",
    "dataiter = iter(train_loader)\n",
    "images, labels = dataiter.next()\n",
    "images = images.numpy()\n",
    "\n",
    "# plot the images in the batch, along with the corresponding labels\n",
    "fig = plt.figure(figsize=(25, 4))\n",
    "for idx in np.arange(20):\n",
    "    ax = fig.add_subplot(2, 20/2, idx+1, xticks=[], yticks=[])\n",
    "    ax.imshow(np.squeeze(images[idx]), cmap='gray')\n",
    "    # print out the correct label for each image\n",
    "    # .item() gets the value contained in a Tensor\n",
    "    ax.set_title(str(labels[idx].item()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "img = np.squeeze(images[1])\n",
    "\n",
    "fig = plt.figure(figsize = (12,12)) \n",
    "ax = fig.add_subplot(111)\n",
    "ax.imshow(img, cmap='gray')\n",
    "width, height = img.shape\n",
    "thresh = img.max()/2.5\n",
    "for x in range(width):\n",
    "    for y in range(height):\n",
    "        val = round(img[x][y],2) if img[x][y] !=0 else 0\n",
    "        ax.annotate(str(val), xy=(y,x),\n",
    "                    horizontalalignment='center',\n",
    "                    verticalalignment='center',\n",
    "                    color='white' if img[x][y]<thresh else 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='per_dnn'> </a>\n",
    "### Performance Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Accuracy'}>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the loss\n",
    "results.accuracy.plot(title=\"Accuracy\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Mean Squared Error'}>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the accuracy\n",
    "results.mse.plot(title=\"Mean Squared Error\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 82.83333333333333%\n"
     ]
    }
   ],
   "source": [
    "# Test the model on validation set\n",
    "Z1 = np.dot(val_x, W1)\n",
    "A1 = sigmoid(Z1)\n",
    "\n",
    "Z2 = np.dot(A1, W2)\n",
    "A2 = sigmoid(Z2)\n",
    "\n",
    "acc = accuracy(A2, val1_y)\n",
    "print(\"Accuracy: {}%\".format(acc*100)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='cnn'> </a>\n",
    "## Convolutional Neural Network (CNN)\n",
    "\n",
    "<a class='anchor' id='arch_cnn'> </a>\n",
    "### Model Architecture\n",
    "The model here is a simple CNN model. The first layer is the input layer; the size of the input image is 28 × 28. The second layer is the convolution layer, it can obtain 32 different feature maps by convolution with the input image. The second layer is the pooling layer. It computes the local maximum of the input feature maps. \n",
    "The next convolution layer and pooling operate the same way except for the number and size of the convolution kernels. The next if the flatten layer to convert the 2D feature maps into 1D. Then, 2 fully connected layers with 10 neurons as the output of the classifier. \n",
    "\n",
    "<a class='anchor' id='build_cnn'> </a>\n",
    "### Model Build"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((54000, 28, 28, 1), (6000, 28, 28, 1), (10000, 28, 28, 1))"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reshape the data into 2D arrays for each image\n",
    "test_size = test.shape[0]\n",
    "\n",
    "# train_x\n",
    "train2_x = train_x.reshape([sample_size-validation_size, 28,28,1])\n",
    "# val_x\n",
    "val2_x = val_x.reshape([validation_size, 28,28,1])\n",
    "# test_x\n",
    "test2_x = test_x.reshape([test_size, 28,28,1])\n",
    "\n",
    "train2_x.shape, val2_x.shape, test2_x.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((54000, 1), (6000, 1), (10000, 1))"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Split to data and labels \n",
    "# train_labels\n",
    "train2_y = np.asarray(train.iloc[:sample_size-validation_size, 0]).reshape([sample_size-validation_size, 1])\n",
    "# val_labels\n",
    "val2_y = np.asarray(train.iloc[sample_size-validation_size:, 0]).reshape([validation_size, 1])\n",
    "# test_labels\n",
    "test2_y = np.asarray(test.iloc[:, 0]).reshape([test_size, 1])\n",
    "\n",
    "train2_y.shape, val2_y.shape, test2_y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "conv2d (Conv2D)              (None, 28, 28, 32)        320       \n",
      "_________________________________________________________________\n",
      "max_pooling2d (MaxPooling2D) (None, 14, 14, 32)        0         \n",
      "_________________________________________________________________\n",
      "conv2d_1 (Conv2D)            (None, 14, 14, 64)        18496     \n",
      "_________________________________________________________________\n",
      "max_pooling2d_1 (MaxPooling2 (None, 7, 7, 64)          0         \n",
      "_________________________________________________________________\n",
      "dropout (Dropout)            (None, 7, 7, 64)          0         \n",
      "_________________________________________________________________\n",
      "flatten (Flatten)            (None, 3136)              0         \n",
      "_________________________________________________________________\n",
      "dense (Dense)                (None, 128)               401536    \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 10)                1290      \n",
      "=================================================================\n",
      "Total params: 421,642\n",
      "Trainable params: 421,642\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "# Model Build\n",
    "model2 = Sequential([\n",
    "    # First convolution and pooling layer\n",
    "    Conv2D(32, 3, padding =\"same\", input_shape=(28,28,1)),\n",
    "    MaxPool2D(pool_size=(2,2)),\n",
    "    \n",
    "    # Second convolution and pooling layer\n",
    "    Conv2D(64,3, padding  =\"same\"),\n",
    "    MaxPool2D(pool_size=(2,2)),\n",
    "    # Adding a dropput layer to prevent overfittin\n",
    "    Dropout(0.2),\n",
    "    \n",
    "    # Adding two fully connected layers\n",
    "    Flatten(),\n",
    "    Dense(128, activation='relu'),\n",
    "    Dense(10, activation='softmax')\n",
    "])\n",
    "\n",
    "\n",
    "model2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Compile model\n",
    "model2.compile(\n",
    "    optimizer = Adam(),\n",
    "    loss = SparseCategoricalCrossentropy(),\n",
    "    metrics = ['accuracy']\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "1688/1688 [==============================] - 50s 29ms/step - loss: 0.1383 - accuracy: 0.9582 - val_loss: 0.0529 - val_accuracy: 0.9847\n",
      "Epoch 2/10\n",
      "1688/1688 [==============================] - 47s 28ms/step - loss: 0.0494 - accuracy: 0.9844 - val_loss: 0.0545 - val_accuracy: 0.9847\n",
      "Epoch 3/10\n",
      "1688/1688 [==============================] - 48s 28ms/step - loss: 0.0349 - accuracy: 0.9891 - val_loss: 0.0372 - val_accuracy: 0.9912\n",
      "Epoch 4/10\n",
      "1688/1688 [==============================] - 47s 28ms/step - loss: 0.0276 - accuracy: 0.9910 - val_loss: 0.0387 - val_accuracy: 0.9902\n",
      "Epoch 5/10\n",
      "1688/1688 [==============================] - 47s 28ms/step - loss: 0.0222 - accuracy: 0.9930 - val_loss: 0.0494 - val_accuracy: 0.9885\n",
      "Epoch 6/10\n",
      "1688/1688 [==============================] - 49s 29ms/step - loss: 0.0191 - accuracy: 0.9936 - val_loss: 0.0364 - val_accuracy: 0.9918\n",
      "Epoch 7/10\n",
      "1688/1688 [==============================] - 47s 28ms/step - loss: 0.0168 - accuracy: 0.9947 - val_loss: 0.0451 - val_accuracy: 0.9895\n",
      "Epoch 8/10\n",
      "1688/1688 [==============================] - 49s 29ms/step - loss: 0.0161 - accuracy: 0.9947 - val_loss: 0.0502 - val_accuracy: 0.9908\n",
      "Epoch 9/10\n",
      "1688/1688 [==============================] - 48s 28ms/step - loss: 0.0139 - accuracy: 0.9953 - val_loss: 0.0594 - val_accuracy: 0.9893\n",
      "Epoch 10/10\n",
      "1688/1688 [==============================] - 48s 28ms/step - loss: 0.0117 - accuracy: 0.9962 - val_loss: 0.0599 - val_accuracy: 0.9897\n"
     ]
    }
   ],
   "source": [
    "# Train model\n",
    "m2_history = model2.fit(train2_x, train2_y, validation_data=(val2_x, val2_y), epochs=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='per_cnn'> </a>\n",
    "### Performance Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot function to visualize performance\n",
    "def perf_plot(var1, var2, epochs, label1, label2, title):\n",
    "    \"\"\"\n",
    "    Create a figure to visually display values from the model traing vs model validation\n",
    "    \"\"\"\n",
    "    plt.plot(epochs, var1, 'r', label=label1)\n",
    "    plt.plot(epochs, var2, 'b', label=label2)\n",
    "    plt.xlabel(\"Epochs\")\n",
    "    plt.ylabel(label1)\n",
    "    plt.title(title)\n",
    "    plt.legend()\n",
    "    plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get history of the model\n",
    "acc=m2_history.history['accuracy']\n",
    "val_acc=m2_history.history['val_accuracy']\n",
    "loss=m2_history.history['loss']\n",
    "val_loss=m2_history.history['val_loss']\n",
    "epoch = range(len(acc))\n",
    "\n",
    "perf_plot(acc, val_acc, epoch, 'Accuracy', 'Val_accuracy', 'Accuracy Curve - CNN')\n",
    "perf_plot(loss, val_loss, epoch, 'Loss', 'Val_loss', 'Loss Curve - CNN')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class='anchor' id='result'> </a>\n",
    "## Results & Conclusion\n",
    "We have seen previousely how each of the two models behave against new, unseen data (validation data) but let's try them with another sample (test data) to verify the the results. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy of the BPN model is: 91.5%\n",
      "313/313 [==============================] - 4s 11ms/step - loss: 0.0514 - accuracy: 0.9894\n",
      "Accuracy of the CNN model is: 98.94%\n"
     ]
    }
   ],
   "source": [
    "# Evaluate CNN model on test set (holdout)\n",
    "test_loss_2, test_accuracy_2 = model2.evaluate(test2_x, test2_y)\n",
    "\n",
    "print('Accuracy of the CNN model is: {}%'.format(round(test_accuracy_2*100, 2)))\n",
    "\n",
    "\n",
    "# Evaluate DNN model on test set (holdout)\n",
    "Z1 = np.dot(test_x, W1)\n",
    "A1 = sigmoid(Z1)\n",
    "Z2 = np.dot(A1, W2)\n",
    "A2 = sigmoid(Z2)\n",
    "acc = accuracy(A2, test1_y)\n",
    "\n",
    "print(\"Accuracy of the BPN model is: {}%\".format(acc*100)) \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Further Performance Tunning\n",
    "- For better results of both models we could use data augmentation techniques. . We could change the learning rate parameter to reach better accuracy faster. \n",
    "- For faster analysis of data we could convert the model input stream to tensors instead of vectors. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
